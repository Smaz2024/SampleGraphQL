package com.example.graphql.api;

import java.time.Instant;
import java.util.List;

/**
 * Represents a standardized error response structure for the API. This class is used to provide
 * consistent error messages to clients, including details like HTTP status, error type, a
 * user-friendly message, the request path, a timestamp, and a list of specific error details.
 */
public class ApiError {
  private final int status;
  private final String error;
  private final String message;
  private final String path;
  private final Instant timestamp;
  private final List<String> details;

  /**
   * Constructs a new ApiError instance.
   *
   * @param status The HTTP status code of the error (e.g., 400, 404, 500).
   * @param error A brief, high-level description of the error type (e.g., "Bad Request", "Not
   *     Found").
   * @param message A user-friendly message explaining the error.
   * @param path The request URI that caused the error.
   * @param details A list of specific error details, often used for validation errors.
   */
  public ApiError(int status, String error, String message, String path, List<String> details) {
    this.status = status;
    this.error = error;
    this.message = message;
    this.path = path;
    this.timestamp = Instant.now(); // Automatically set the timestamp to the current time.
    this.details = details;
  }

  // Getters for all fields to allow serialization (e.g., to JSON).
  // These would typically be generated by an IDE or Lombok.
  public int getStatus() {
    return status;
  }

  public String getError() {
    return error;
  }

  public String getMessage() {
    return message;
  }

  public String getPath() {
    return path;
  }

  public Instant getTimestamp() {
    return timestamp;
  }

  public List<String> getDetails() {
    return details;
  }
}
